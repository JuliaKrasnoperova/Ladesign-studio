{"version":3,"sources":["main.js"],"names":["formItems","document","querySelectorAll","item","thisPlaceholder","closest","querySelector","addEventListener","classList","add","value","length","remove","_iterator","s","_step","n","done","_loop","window","uploadFile","getElementById","uploadBtn","click","uploadText","innerText","match","popupBg","popup","openPopupButtons","closePopupButton","body","button","forEach","e","preventDefault","target","tabNavItem","accordionTitles","accordionTitle","height","nextElementSibling","scrollHeight","toggle","contains","style","maxHeight","tabContentItem","elem","this","activeTabContent","getAttribute","tabName","tabIndicator","slider","prev","next","items","posInitial","threshold","slides","getElementsByClassName","slidesLength","slideSize","offsetWidth","firstSlide","lastSlide","sliderItems","index","allowShift","event","shiftSlide","offsetLeft","touches","clientX","posX1","dragEnd","onmousemove","dragAction","posX2","left","posFinal","onmouseup","dir","action","cloneFirst","cloneLast","wrapper","dragStart","insertBefore","slide","carousel","card","carouselWidth","getComputedStyle","cardMarginRight","Number","cardStyle","marginRight","offset","maxX","cardCount","leftButton","transform","rightButton","concat"],"mappings":"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","file":"main.min.js","sourcesContent":["// form placeholder\nconst formItems = document.querySelectorAll('.form-item__field');\n\nfor (let item of formItems) {\n    const thisParent = item.closest('.form-item');\n    const thisPlaceholder = thisParent.querySelector('.form-item__placeholder');\n    // Если инпут в фокусе\n    item.addEventListener('focus', function () {\n        thisPlaceholder.classList.add('active');\n    });\n\n    // Если инпут теряет фокус\n    item.addEventListener('blur', function () {\n        if (item.value.length > 0) {\n            thisPlaceholder.classList.add('active');\n        } else {\n            thisPlaceholder.classList.remove('active');\n        }\n    })\n};\n// Atttach files\nwindow.onload = () => {\n    const uploadFile = document.getElementById(\"form__upload-file\");\n    const uploadBtn = document.getElementById(\"form__upload-btn\");\n    const uploadText = document.getElementById(\"form__upload-text\");\n\n    // Иммитируем нажатие по нашей скрытой кнопке закгрузке файлов\n    if (uploadBtn) {\n        uploadBtn.addEventListener(\"click\", function () {\n            uploadFile.click();\n        });\n    }\n    // Добавляем событие загрузки файла\n    if (uploadFile) {\n        uploadFile.addEventListener(\"change\", function () {\n            if (uploadFile.value) {\n                uploadText.innerText = uploadFile.value.match(/[\\/\\\\]([\\w\\d\\s\\.\\-(\\)]+)$/)[1];\n            } else {\n                uploadText.innerText = \"Файл не выбран\";\n            }\n        });\n    }\n};\n\n// pop-up\nlet popupBg = document.querySelector('#popup__bg');\nlet popup = document.querySelector('.popup');\nlet openPopupButtons = document.querySelectorAll('#popup__open');\nlet closePopupButton = document.querySelector('.popup__close');\nlet body = document.querySelector('body');\n\n\nopenPopupButtons.forEach((button) => {\n    button.addEventListener('click', (e) => {\n        e.preventDefault();\n        popupBg.classList.add('active');\n        popup.classList.add('popup__active');\n        body.classList.add('locked');\n    })\n});\nclosePopupButton.addEventListener('click', () => {\n    popupBg.classList.remove('active');\n    popup.classList.remove('popup__active');\n    body.classList.remove('locked');\n});\ndocument.addEventListener('click', (e) => {\n    if (e.target === popupBg) {\n        popupBg.classList.remove('active');\n        popup.classList.remove('popup__active');\n        body.classList.remove('locked');\n    }\n});\n\n// Accordion index\nconst accordionTitles = document.querySelectorAll('.accordion__title');\nconst tabIndicator = document.querySelector(\"#tab__indicator\");\n\naccordionTitles.forEach((accordionTitle) => {\n    accordionTitle.addEventListener('click', () => {\n        const height = accordionTitle.nextElementSibling.scrollHeight;\n        accordionTitle.classList.toggle(\"accordion__title-active\");\n        if (accordionTitle.classList.contains('accordion__title-active')) {\n            accordionTitle.nextElementSibling.style.maxHeight = `${height}px`;\n        } else {\n            accordionTitle.nextElementSibling.style.maxHeight = \"0px\";\n        }\n    })\n});\n\n\n// Tabs\nlet tabNavItem = document.querySelectorAll('.tabs__nav-item');\nlet tabContentItem = document.querySelectorAll('.tabs__content');\n\ntabNavItem.forEach(function (elem) {\n    elem.addEventListener('click', activeTab);\n})\n\nfunction activeTab() {\n    tabNavItem.forEach(function (elem) {\n        elem.classList.remove('active');\n    })\n    this.classList.add('active');\n    let tabName = this.getAttribute('data-tab');\n\n    activeTabContent(tabName);\n\n}\n\nfunction activeTabContent(tabName) {\n    tabContentItem.forEach(function (item) {\n        if (item.classList.contains(tabName)) {\n            item.classList.add('active');\n        } else {\n            item.classList.remove('active');\n        }\n    })\n};\n\n// Slider\nlet slider = document.getElementById('slider'),\n    sliderItems = document.getElementById('slides'),\n    prev = document.getElementById('prev'),\n    next = document.getElementById('next');\n\nfunction slide(wrapper, items, prev, next) {\n    let posX1 = 0,\n        posX2 = 0,\n        posInitial,\n        posFinal,\n        threshold = 100,\n        slides = items.getElementsByClassName('slider__item'),\n        slidesLength = slides.length,\n        slideSize = items.getElementsByClassName('slider__item')[0].offsetWidth,\n        firstSlide = slides[0],\n        lastSlide = slides[slidesLength - 1],\n        cloneFirst = firstSlide.cloneNode(true),\n        cloneLast = lastSlide.cloneNode(true),\n        index = 0,\n        allowShift = true;\n\n    // Clone first and last slide\n    items.appendChild(cloneFirst);\n    items.insertBefore(cloneLast, firstSlide);\n    wrapper.classList.add('loaded');\n\n    // Mouse events\n    items.onmousedown = dragStart;\n\n    // Touch events\n    items.addEventListener('touchstart', dragStart);\n    items.addEventListener('touchend', dragEnd);\n    items.addEventListener('touchmove', dragAction);\n\n    // Click events\n    prev.addEventListener('click', function () {\n        shiftSlide(-1)\n    });\n    next.addEventListener('click', function () {\n        shiftSlide(1)\n    });\n\n    // Transition events\n    items.addEventListener('transitionend', checkIndex);\n\n    function dragStart(e) {\n        e = e || window.event;\n        e.preventDefault();\n        posInitial = items.offsetLeft;\n\n        if (e.type == 'touchstart') {\n            posX1 = e.touches[0].clientX;\n        } else {\n            posX1 = e.clientX;\n            document.onmouseup = dragEnd;\n            document.onmousemove = dragAction;\n        }\n    }\n\n    function dragAction(e) {\n        e = e || window.event;\n\n        if (e.type == 'touchmove') {\n            posX2 = posX1 - e.touches[0].clientX;\n            posX1 = e.touches[0].clientX;\n        } else {\n            posX2 = posX1 - e.clientX;\n            posX1 = e.clientX;\n        }\n        items.style.left = (items.offsetLeft - posX2) + \"px\";\n    }\n\n    function dragEnd(e) {\n        posFinal = items.offsetLeft;\n        if (posFinal - posInitial < -threshold) {\n            shiftSlide(1, 'drag');\n        } else if (posFinal - posInitial > threshold) {\n            shiftSlide(-1, 'drag');\n        } else {\n            items.style.left = (posInitial) + \"px\";\n        }\n\n        document.onmouseup = null;\n        document.onmousemove = null;\n    }\n\n    function shiftSlide(dir, action) {\n        items.classList.add('shifting');\n\n        if (allowShift) {\n            if (!action) {\n                posInitial = items.offsetLeft;\n            }\n\n            if (dir == 1) {\n                items.style.left = (posInitial - slideSize) + \"px\";\n                index++;\n            } else if (dir == -1) {\n                items.style.left = (posInitial + slideSize) + \"px\";\n                index--;\n            }\n        };\n\n        allowShift = false;\n    }\n\n    function checkIndex() {\n        items.classList.remove('shifting');\n\n        if (index == -1) {\n            items.style.left = -(slidesLength * slideSize) + \"px\";\n            index = slidesLength - 1;\n        }\n\n        if (index == slidesLength) {\n            items.style.left = -(1 * slideSize) + \"px\";\n            index = 0;\n        }\n\n        allowShift = true;\n    }\n}\nslide(slider, sliderItems, prev, next);\n\n// Carousel\n\n// Select the carousel you'll need to manipulate and the buttons you'll add events to\nconst carousel = document.querySelector(\"[data-target='carousel']\");\nconst card = carousel.querySelector(\"[data-target='card']\");\nconst leftButton = document.querySelector(\"[data-action='carouselLeft']\");\nconst rightButton = document.querySelector(\"[data-action='carouselRight']\");\n\n// Prepare to limit the direction in which the carousel can slide, \n// and to control how much the carousel advances by each time.\n// In order to slide the carousel so that only three cards are perfectly visible each time,\n// you need to know the carousel width, and the margin placed on a given card in the carousel\nconst carouselWidth = carousel.offsetWidth;\nconst cardStyle = card.currentStyle || window.getComputedStyle(card)\nconst cardMarginRight = Number(cardStyle.marginRight.match(/\\d+/g)[0]);\n\n// Count the number of total cards you have\nconst cardCount = carousel.querySelectorAll(\"[data-target='card']\").length;\n\n// Define an offset property to dynamically update by clicking the button controls\n// as well as a maxX property so the carousel knows when to stop at the upper limit\nlet offset = 0;\nconst maxX = -((cardCount / 3) * carouselWidth +\n    (cardMarginRight * (cardCount / 3)) -\n    carouselWidth - cardMarginRight);\n\n\n// Add the click events\nleftButton.addEventListener(\"click\", function () {\n    if (offset !== 0) {\n        offset += carouselWidth + cardMarginRight;\n        carousel.style.transform = `translateX(${offset}px)`;\n    }\n})\n\nrightButton.addEventListener(\"click\", function () {\n    if (offset !== maxX) {\n        offset -= carouselWidth + cardMarginRight;\n        carousel.style.transform = `translateX(${offset}px)`;\n    }\n})"]}